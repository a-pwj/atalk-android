--- /home/cmeng/source/smack/Smack-4.4.0-alpha3-20200404/org/jivesoftware/smackx/filetransfer/FaultTolerantNegotiator.java	2020-02-23 19:05:18.000000000 
+++ /home/cmeng/workspace/android/atalk-android/aTalk/src/main/java/org/jivesoftware/smackx/filetransfer/FaultTolerantNegotiator.java	2020-04-05 15:28:12.000000000 
@@ -62,17 +62,26 @@
                 "stream method.");
     }
 
     @Override
     public InputStream createIncomingStream(final StreamInitiation initiation) throws SmackException, XMPPErrorException, InterruptedException {
         // This could be either an xep47 ibb 'open' iq or an xep65 streamhost iq
+        InputStream inputStream = null;
         IQ initiationSet = initiateIncomingStream(connection(), initiation);
 
         StreamNegotiator streamNegotiator = determineNegotiator(initiationSet);
 
-        return streamNegotiator.negotiateIncomingStream(initiationSet);
+        try {
+            inputStream = streamNegotiator.negotiateIncomingStream(initiationSet);
+        } catch (Exception ex) {
+            if ((streamNegotiator instanceof Socks5TransferNegotiator)
+                    && (secondaryNegotiator instanceof IBBTransferNegotiator)) {
+                inputStream = ((IBBTransferNegotiator) secondaryNegotiator).getIbbIncomingStream(initiation);
+            }
+        }
+        return inputStream;
     }
 
     private StreamNegotiator determineNegotiator(Stanza streamInitiation) {
         if (streamInitiation instanceof Bytestream) {
             return primaryNegotiator;
         } else if (streamInitiation instanceof Open) {
